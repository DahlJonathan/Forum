CREATE TABLE IF NOT EXISTS User (
    UserID INTEGER PRIMARY KEY AUTOINCREMENT,
    Email TEXT UNIQUE NOT NULL,
    Username TEXT UNIQUE NOT NULL,
    Password TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Post (
    PostID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    CategoryID INTEGER,
    Title TEXT NOT NULL,
    Content TEXT NOT NULL,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE CASCADE,
    FOREIGN KEY(CategoryID) REFERENCES Category(CategoryID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Comment (
    CommentID INTEGER PRIMARY KEY AUTOINCREMENT,
    PostID INTEGER NOT NULL,
    UserID INTEGER NOT NULL,
    Content TEXT NOT NULL,
    FOREIGN KEY(PostID) REFERENCES Post(PostID) ON DELETE CASCADE,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS LikesDislikes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    PostID INTEGER,
    CommentID INTEGER,
    IsLike BOOLEAN NOT NULL,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE CASCADE,
    FOREIGN KEY(PostID) REFERENCES Post(PostID) ON DELETE CASCADE,
    FOREIGN KEY(CommentID) REFERENCES Comment(CommentID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Category (
    CategoryID INTEGER PRIMARY KEY AUTOINCREMENT,
    CategoryName TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS PasswordResetToken (
    TokenID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    Token TEXT NOT NULL UNIQUE,
    Expiration DATETIME NOT NULL,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_post_user ON Post(UserID);
CREATE INDEX IF NOT EXISTS idx_post_category ON Post(CategoryID);
CREATE INDEX IF NOT EXISTS idx_comment_post ON Comment(PostID);
CREATE INDEX IF NOT EXISTS idx_comment_user ON Comment(UserID);
CREATE INDEX IF NOT EXISTS idx_like_user ON LikesDislikes(UserID);
CREATE INDEX IF NOT EXISTS idx_like_post ON LikesDislikes(PostID);
CREATE INDEX IF NOT EXISTS idx_like_comment ON LikesDislikes(CommentID);
